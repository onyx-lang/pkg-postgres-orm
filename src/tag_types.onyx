package postgres.orm

model :: struct {
    table_name: str

    schema_name := "public"
}

primary_key    :: #distinct void
not_null       :: #distinct void
unique         :: #distinct void
nullable       :: #distinct void
auto_increment :: #distinct void

constraint  :: struct {
    name: str
    cond: str
}
default     :: struct {
    expr: str
}
joint_unique :: struct {
    cols: [] str
}
foreign_key :: struct {
    model: type_expr
    key: str = ""

    on_delete := ReferentialAction.No_Action
    on_update := ReferentialAction.No_Action
}

has_one :: struct {
    foreign_key: str
    local_key:   str = ""
}

has_many :: struct {
    foreign_key: str
    local_key:   str = ""
}

belongs_to :: struct {
    local_key:   str
    foreign_key: str = ""
}

many_to_many :: struct {
    mapping_model: type_expr
    lookup_key:    str
    result_key:    str
}

section :: struct {
    type: type_expr
}

end_section :: #distinct void

column_name :: struct {
    name: str
}

#local
ReferentialAction :: enum {
    No_Action
    Restrict
    Cascade
    Set_Null
    Set_Default
}
